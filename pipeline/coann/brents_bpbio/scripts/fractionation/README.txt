This code was used in:
http://www.plosbiology.org/article/info:doi/10.1371/journal.pbio.1000409 (Following Tetraploidy in Maize, a Short Deletion Mechanism Removed Genes Preferentially from One of the Two Homeologs)

this description from that text describes what is done when plot_sims.py is called with 0 as the 3nd argument (sys.argv[2]):
     Using the initial hypothesis of a deletion mechanism that independently eliminates one gene at a time, a simulation of gene loss was carried out. Starting with a length equal to all genes, both deleted and still present, genes were deleted at random until the simulated number of deletions was equal to the true observed number. The distribution of apparent deletion lengths for the run was then saved and the preceding steps were repeated 1,000 times. This gives a distribution of frequencies of all deletion lengths. The median number of apparent deletion runs from these simulations is shown by the white circles in the grey lines of Figure 5, with grey line itself marking the values between which the results from 95% of the simulations fall.

for the simulations (with 1 as the 3rd argument):
As the distribution with the deletion size fixed at 1 did not perfectly match the observed results, a genetic algorithm using 20 (genetic) character states, each representing a deletion-length between 1 and 5 genes long was used to determine, given the region length and the distribution of observed deletion lengths, to achieve the best match between simulated and observed data. The fitness of solutions in the evolutionary algorithm were scored using the after each step in the Monte-Carlo with the most fit solutions being those where the median simulated number of deletion runs was least different from the observed number of runs. The genetic algorithm was allowed to run for 100,000 generations. These new weighted average deletion lengths were then be used to generate new sets of expectations for data, as seen in Figure 4D.
